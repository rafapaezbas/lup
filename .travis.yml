language: node_js

node_js:
  - '11.6.0'

# Always run two parallel builds: one on mac and one on linux
# the linux build will use wine to be able to build windows and
# linux apps
matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "11.6.0"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      dist: xenial
      sudo: required
      services: docker
      language: generic

notifications:
  email: false

# cache some files for faster builds
cache:
  yarn: true
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

# add git lfs for large file support
before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    fi
before_script:
  - git lfs pull

# on PRs and merges to master and prod run tests and build the app
script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      apt-get update
      sudo apt-get install libasound2 libasound2-dev
      nvm install 11.6.0
      nvm use nvm 11.6.0
    fi
    npm install -g node-gyp
    npm install
    npm install --save-dev electron-rebuild
    ./node_modules/.bin/electron-rebuild midi
    npm run-script dist

#token  2f731027a42c48c57c6b8435095b857680e7be27
deploy:
  provider: releases
  api_key: $GH_TOKEN
  file_glob: true
  file: dist/octaedre-1.0.0*
  skip_cleanup: true
  on:
    tags: false
    branches:
      only:  
        - prod


before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

# only run this script on pull requests and merges into
# the 'prod' branch
#branches:
#  only:
#  - prod
